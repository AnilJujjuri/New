from datetime import time
from opcua import Client, ua

# OPC UA server endpoint URL
server_url = "opc.tcp://MYTSL02946.lnties.com:53530/OPCUA/SimulationServer"

# Connect to the OPC UA server
client = Client(server_url)
client.connect()

# Get the root node
root = client.get_root_node()

# Create a session
session = client.create_session()

# Create a subscription
subscription = client.create_subscription(500, ua.ClientSubscription())

# Create a data change callback function
def data_change_notification(subscription, data):
    for data_value in data.MonitoredItems:
        print("Data change from server:")
        node_id = data_value.Node.NodeId
        value = data_value.Value.Value
        print(f"Item '{node_id}', Value = {value}")

# Subscribe to data changes
handler = subscription.subscribe_data_change(data_change_notification)

# Run continuously
while True:
    # Update the values of the variables (you can modify this part as needed)
    for var_node in root.get_children():
        if var_node.get_node_class() == ua.NodeClass.Variable:
            # Generate a new value
            new_value = var_node.get_value() + 1

            # Set the new value to the variable
            var_node.set_value(new_value)

    # Sleep for a certain interval (e.g., 1 second)
    time.sleep(1)

# Cleanup (will never be reached in this case)
subscription.unsubscribe(handler)
session.close()
client.disconnect()
