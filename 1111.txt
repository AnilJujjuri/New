import random
import time
from opcua import Client
from opcua import ua


class DataChangeHandler(object):
    def __init__(self):
        self.initialized = False

    def datachange_notification(self, node, val, data):
        if not self.initialized:
            print("Data change from server:")
            self.initialized = True
        node_id = node.nodeid.to_string()
        value = val.Value
        print(f"Item \"{node_id}\", Value = {value}")


if __name__ == '__main__':
    client = Client("opc.tcp://MYTSL02946.lnties.com:53530/OPCUA/SimulationServer")
    client.connect()

    print("Client created")

    node_id = "ns=3;i=1012"

    try:
        node = client.get_node(node_id)
        handler = DataChangeHandler()
        subscription = client.create_subscription(100, handler)
        monitored_item = subscription.subscribe_data_change(node)

        while True:
            value = random.random()  # Generate a random value
            node.set_attribute(ua.AttributeIds.Value, ua.DataValue(value))
            print(f"Value written: {value}")
            time.sleep(1)  # Wait for 1 second

    except KeyboardInterrupt:
        pass

    subscription.delete()
    client.disconnect()
