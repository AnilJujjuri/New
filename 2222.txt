import can
import csv
import time
from threading import Thread


def send_can_message(bus, message_id, message_data, csv_writer):
    message = can.Message(
        arbitration_id=message_id,
        data=message_data,
        is_extended_id=False
    )
    bus.send(message)
    print(f"Sent message: ID=0x{message_id:x}, Data={message_data}")
    csv_writer.writerows([[message_id, message_data]])


def receive_can_messages(bus):
    try:
        while True:
            message = bus.recv(timeout=1)
            if message is not None:
                print(f"Received message: ID=0x{message.arbitration_id:x}, Data={message.data}")
    except can.CanError as e:
        print(f"Exception in thread {Thread.current_thread().name}: {e}")


def periodic_message_sender(bus, csv_writer):
    for message_id in range(0xC7, 0xC9):
        message_data = [170, 187, 204]
        send_can_message(bus, message_id, message_data, csv_writer)
        time.sleep(1)


def main():
    bus = can.Bus(interface='virtual', channel='vcan0')

    with open('sent_messages.csv', 'w', newline='') as csvfile:
        csv_writer = csv.writer(csvfile)
        csv_writer.writerow(['ID', 'Data'])  # Write header to CSV

        receiver_thread = Thread(target=receive_can_messages, args=(bus,))
        sender_thread = Thread(target=periodic_message_sender, args=(bus, csv_writer))

        receiver_thread.start()
        sender_thread.start()

        sender_thread.join()

    bus.shutdown()


if __name__ == "__main__":
    main()

    

    
