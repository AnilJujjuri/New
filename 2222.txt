import os
import random
import time
import minimalmodbus
from azure.iot.device import IoTHubModuleClient, Message

# Azure IoT Hub connection string
CONNECTION_STRING = os.getenv('device_connection_string')

# Modbus TCP server parameters
SERVER_IP = "0.0.0.0"  # Listen on all available network interfaces
SERVER_PORT = 5020

# Create a TCP socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind((SERVER_IP, SERVER_PORT))
server_socket.listen(1)
print("Modbus TCP server is listening on {}:{}".format(SERVER_IP, SERVER_PORT))

# Create a Modbus instrument instance for the simulator
modbus_instrument = minimalmodbus.Instrument('/dev/ttyUSB0', 1)  # Replace with your Modbus instrument settings
modbus_instrument.serial.baudrate = 9600  # Modify baudrate as needed
modbus_instrument.serial.timeout = 1

def handle_client(client_socket):
    while True:
        request = client_socket.recv(1024)
        if not request:
            break

        # Handle the Modbus request here
        # Implement your logic to read Modbus registers

        # Generate random data for testing
        energy_consumption_value = random.uniform(0.0, 100.0)
        voltage_value = random.uniform(100.0, 240.0)
        current_value = random.uniform(0.0, 10.0)
        power_factor_value = random.uniform(0.0, 1.0)

        # Respond to the client
        response = ...  # Implement your Modbus response logic
        client_socket.send(response)

    client_socket.close()

while True:
    client_socket, client_address = server_socket.accept()
    print("Accepted connection from:", client_address)
    client_thread = threading.Thread(target=handle_client, args=(client_socket,))
    client_thread.start()
